# Taiga-Task-Master System PRD: Automated PRD-to-User-Story Pipeline

## Executive Summary
This PRD outlines an automated system for converting Product Requirement Documents (PRDs) into tracked Taiga tasks with nested subtasks, using a tag-based identification system and atomic Markdown rendering. The solution leverages Taiga's REST API with Bearer token authentication while maintaining strict dependency injection patterns for testability.

## System Architecture

### Core Components
#### PRD Webhook Receiver (Module 1)
- **Endpoint**: `/api/prd-webhook` (POST)
- **Authentication**: Taiga-generated JWT validation[1][3]
- **Payload Handling**:
  ```typescript
  type WebhookPayload = {
    project: number;
    ref: number;
    content: string;
  };
  ```
- **Validation**: Checks PRD swimlane membership via Taiga's `/api/v1/tasks/{id}` endpoint[20]

#### Task Generation Service (Module 2)
- **CLI Integration**: Wraps `claude-task-master` with file system abstraction
- **Output Validation**:
  ```typescript
  const validateTasksFile = Schema.parse(TasksFilesContent);
  ```
- **Atomic Operations**: Ensures PRD.txt â†’ tasks.json transformation as single transaction

#### Taiga Synchronizer (Module 3)
- **Tag Strategy**:
  - `project-tm:{projectSlug}` for batch operations
  - `taskmaster-{id}` for individual task tracking[16][26]
- **Swimlane Management**: Creates dedicated "Master Managed" swimlane using `/api/v1/swimlanes`[20]

## Functional Requirements

### Task Identification System
- **Tag Pairing**: Combines project-level and task-specific tags
  ```typescript
  const createTags = (taskId: number) => [
    `project-tm:${process.env.PROJECT_SLUG}`,
    `taskmaster-${taskId}`
  ];
  ```
- **Tag Validation**: Regex pattern `^taskmaster-\d+$` for ID extraction[14][26]

### Markdown Rendering Engine
- **Content Transformation**:
  ```typescript
  const renderSubtask = (subtask: SubtaskFileContent) => `
  ### ${subtask.title} [${subtask.status}]
  ${subtask.description || ''}
  ${subtask.details ? `\n**Details**:\n${subtask.details}` : ''}
  `;
  ```
- **Dependency Visualization**: Auto-generates Mermaid diagram for task relationships[22]

### Synchronization Workflow
1. **ID Collision Check**: Uses Taiga's `?tags=taskmaster-{id}` filter[16][20]
2. **Atomic Operations**:
   ```typescript
   const syncOperation = (tasks: TrackerTask[]) => {
     const batches = chunk(tasks, 50); // Avoid API rate limits
     return sequential(batches.map(batch => () => processBatch(batch)));
   };
   ```
3. **Conflict Resolution**: Last-write-wins strategy with version tracking[6][25]

## Non-Functional Requirements

### Authentication Strategy
- **Token Management**:
  ```typescript
  type AuthConfig = {
    token: string;
    tokenType: 'Bearer';
  };

  const getAuthHeader = ({token, tokenType}: AuthConfig) =>
    ({'Authorization': `${tokenType} ${token}`});
  ```
- **Credential Rotation**: Hourly token refresh via `/api/v1/auth/refresh`[21]

### Error Handling
- **Retry Mechanism**: Exponential backoff with jitter
  ```typescript
  const retryPolicy = retry({
    times: 3,
    delay: 'exponential',
    jitter: true
  });
  ```
- **Dead Letter Queue**: Failed tasks stored in `sync-failures/` directory

## Implementation Details

### Dependency Injection Structure
```typescript
type TaigaClientDeps = {
  http: {
    get: (url: string) => Promise;
    post: (url: string, body: unknown) => Promise;
  };
  auth: AuthConfig;
};

const createTaigaClient = ({http, auth}: TaigaClientDeps) => ({
  createTask: (task: TaskText) =>
    http.post('/api/v1/tasks', {
      ...task,
      tags: createTags(task.masterId)
    })
});
```

### Task Validation Pipeline
```typescript
const taskSchema = Schema.Struct({
  masterId: Schema.Number,
  title: Schema.NonEmptyString,
  status: Schema.Enum(TaskStatus)
});

const validateTask = Schema.parse(taskSchema);
```

## Appendices

### Sequence Diagram
```mermaid
sequenceDiagram
  participant Taiga as Taiga PRD Swimlane
  participant Webhook as PRD Webhook
  participant CLI as Claude CLI
  participant Sync as Taiga Sync

  Taiga->>Webhook: PRD Created (HTTP POST)
  Webhook->>CLI: Generate tasks.json
  CLI->>Sync: Read/Validate tasks
  Sync->>Taiga: Create/Update Tasks
```

### API Rate Limits Handling
| Endpoint          | Limit       | Strategy               |
|-------------------|-------------|------------------------|
| GET /tasks        | 100/min     | Request coalescing     |
| POST /tasks       | 30/min      | Batch processing       |
| PATCH /tasks/{id} | 60/min      | Exponential backoff    |

This design ensures reliable synchronization while adhering to Taiga's API constraints[20][37].

Citations:
[1] https://python-taiga.readthedocs.io/en/latest/api.html
[2] https://community.taiga.io/t/how-to-get-application-id-for-rest-api/3398
[3] http://python-taiga.github.io
[4] https://support.account.wrk.com/en/articles/9958584-create-task-in-taiga
[5] https://github.com/kaleidos-ventures/taiga-back/blob/main/taiga/users/api.py
[6] https://community.taiga.io/t/how-to-associate-custom-attributes-via-api/2966
[7] https://community.taiga.io/t/unable-to-create-task-linked-to-user-story/2673
[8] https://pypi.org/project/langchain-taiga/
[9] https://stackoverflow.com/questions/9879360/how-to-get-a-list-of-task-filter-by-tag-in-the-targetprocess-rest-api
[10] https://pypi.org/project/python-taiga/0.3.0/
[11] https://community.taiga.io/t/sorting-filtering-projects-by-tags/944
[12] https://github.com/taigaio/taiga-doc/blob/main/api/general-notes.adoc
[13] https://devopshero.wordpress.com/2016/08/22/notes-on-taiga-api/
[14] https://forum.obsidian.md/t/filter-tasks-with-multiple-tags/51671
[15] https://pkg.go.dev/github.com/theriverman/taigo
[16] https://community.taiga.io/t/filter-with-tags/3100
[17] https://groups.google.com/g/taigaio/c/gRoO-RVeKo8
[18] https://github.com/taigaio/taiga-doc/blob/master/api/api.adoc
[19] https://github.com/taigaio/taiga-doc/blob/main/api/points/endpoints.adoc
[20] https://github.com/taigaio/taiga-doc/blob/main/api/tasks/endpoints.adoc
[21] https://groups.google.com/g/taigaio/c/mhB910w3SdQ
[22] https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/
[23] https://web.app.ufz.de/egu_session_recommender?id=9352
[24] https://www.blm.gov/sites/default/files/docs/2024-11/AK_Appendix%20A_Technical%20Report_TWS%20et%20al.%20Special%20Area%20Proposal_reduced%20size.pdf
[25] https://community.taiga.io/t/make-it-possible-to-create-additional-tags/4739
[26] https://taiga.pm/adding-tasks-in-bulk-from-the-taskboard/
[27] https://www.youtube.com/watch?v=T0dL0gt9lKI
[28] https://python.langchain.com/docs/integrations/tools/taiga/
[29] https://github.com/richbl/ng2-taiga-task-activity-reports
[30] https://github.com/richbl/taiga.io-scripts
[31] https://taiga-ui.dev/components/filter/
[32] https://github.com/nephila/python-taiga/issues/106
[33] https://groups.google.com/g/taigaio/c/J_BGgeL3uyU/m/_IZ_YYHfDgAJ
[34] https://groups.google.com/g/taigaio/c/PfqcpCxeEhQ/m/OvDxeVFtDQAJ
[35] https://python-taiga.readthedocs.io/en/latest/models.html
[36] https://github.com/lastlink/TAIGA-JIRA-IMPORTER
[37] https://developers.google.com/workspace/tasks/reference/rest/v1/tasks/list
[38] https://docs.matillion.com/metl/docs/2972278/
[39] https://github.com/DependencyTrack/dependency-track/issues/4463
[40] https://forum.asana.com/t/api-get-all-tasks-with-a-particular-tag/148395
[41] https://docs.imply.io/latest/druid/api-reference/tasks-api/
[42] https://doc.unica.com/products/platform/14_0_0/en_us/UnicaPlatform12_1_9AdminGuide_en_us.pdf
[43] https://en.wikipedia.org/wiki/Tag_(metadata)
[44] https://www.lenovo.com/ca/en/glossary/tag/
[45] https://wordpress.com/support/posts/tags/
[46] https://docs.taiga.io/api.html
[47] https://python-taiga.readthedocs.io/en/latest/usage.html
[48] https://taiga-ui.dev/components/input-files/
[49] https://python-taiga.readthedocs.io/en/stable/
[50] https://python-taiga.readthedocs.io/_/downloads/en/stable/pdf/
[51] https://github.com/theriverman/taigo/blob/master/README.md
[52] https://poseidon.les.inf.puc-rio.br/palomasette/taiga-back/-/blob/4.2.6/taiga/projects/tagging/api.py
[53] https://api.sap.com/api/SPA_Workflow_Runtime/path/get_v1_task_instances
[54] https://pubsaskdev.blob.core.windows.net/pubsask-prod/127305/20.0_Vascular_Plant_SDSP.pdf
[55] https://community.taiga.io/t/api-responses-do-not-correspond-to-api-documentation/2874
[56] https://docs.taiga.io/webhooks.html
[57] https://n8n.io/integrations/microsoft-teams-admin/and/taiga/
[58] https://poseidon.les.inf.puc-rio.br/palomasette/taiga-back/-/blob/4.2.6/taiga/projects/tasks/api.py
[59] https://github.com/nephila/python-taiga/blob/master/tasks.py
[60] https://poseidon.les.inf.puc-rio.br/palomasette/taiga-back/-/blob/3.3.4/taiga/projects/tasks/api.py
[61] https://n8n.io/integrations/openai/and/taiga/
[62] https://github.com/nephila/python-taiga/issues/162
[63] https://poseidon.les.inf.puc-rio.br/palomasette/taiga-back/-/blob/5.0.14/taiga/projects/tasks/api.py
[64] https://developers.awork.com/apiv1/assigned-tasks/returns-all-tags-the-user-is-allowed-to-see-you-can-filter-the-tags-by-task-model-query-constraints
[65] https://try.vikunja.io/api/v1/docs
[66] https://airflow.apache.org/docs/apache-airflow/stable/stable-rest-api-ref.html
[67] https://rapidtags.io/generator
[68] https://www.tunepocket.com/youtube-tags-generator/
[69] https://keywordtool.io/youtube
[70] https://support.google.com/youtube/answer/146402
[71] https://community.taiga.io/t/how-do-i-adjust-workflows-from-jira-task-points-card-view/931

---
Answer from Perplexity: pplx.ai/share