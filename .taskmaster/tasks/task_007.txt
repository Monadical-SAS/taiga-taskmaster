# Task ID: 7
# Title: Add Timeout Handling to Command Execution
# Status: done
# Dependencies: 1, 3
# Priority: medium
# Description: Implement timeout handling for all command executions to prevent indefinite hanging on long-running commands.
# Details:
1. Use Effect's timeout functionality for all command executions:
```typescript
import { Duration } from 'effect/Duration';
import { Effect } from 'effect/Effect';

const executeCommandWithTimeout = (command: Command.Command, timeoutMs = 30000) =>
  executeCommand(command).pipe(
    Effect.timeout(Duration.millis(timeoutMs)),
    Effect.catchTag('TimeoutException', (error) =>
      Effect.fail({ _tag: 'CommandTimeoutError', command: serializeCommand(command), timeout: timeoutMs })
    )
  );
```
2. Add timeout configuration options to all command execution functions
3. Use Effect's TestClock for testing timeout scenarios
4. Update documentation to explain timeout behavior

# Test Strategy:
1. Write tests that verify commands timeout after the specified duration
2. Use TestClock to simulate timeouts without waiting
3. Test error handling for timeout cases
4. Verify timeout errors are properly typed and propagated
