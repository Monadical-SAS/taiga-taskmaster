version: "3.8"

services:
  taiga-task-master-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: taiga-task-master:dev
    container_name: taiga-task-master-webhook-dev
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      # Webhook Configuration
      - WEBHOOK_TOKEN=${WEBHOOK_TOKEN}
      - PORT=3000
      - NODE_ENV=development

      # Taiga API Configuration
      - TAIGA_BASE_URL=${TAIGA_BASE_URL:-https://api.taiga.io}
      - TAIGA_USERNAME=${TAIGA_USERNAME}
      - TAIGA_PASSWORD=${TAIGA_PASSWORD}
      - TAIGA_PROJECT_ID=${TAIGA_PROJECT_ID}

      # AI API Keys (if using AI features)
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PERPLEXITY_API_KEY=${PERPLEXITY_API_KEY}
    env_file:
      - .env
    volumes:
      # Mount source code for development
      - ./packages:/app/packages
      - ./tsconfig.json:/app/tsconfig.json
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      # Exclude node_modules to avoid conflicts
      - /app/node_modules
      - /app/packages/*/node_modules
    working_dir: /app
    command:
      [
        "sh",
        "-c",
        "pnpm run build && cd packages/webhook && pnpm run start:dev",
      ]
    networks:
      - taiga-network-dev
    labels:
      - "com.taiga-task-master.service=webhook-dev"
      - "com.taiga-task-master.version=1.0.0-dev"

networks:
  taiga-network-dev:
    driver: bridge
    name: taiga-task-master-network-dev
